[tool.poetry]
name = "auth-service"
version = "0.1.0"
description = "Authentication service for audit log API"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.13"
uvicorn = {extras = ["standard"], version = "^0.35.0"}
sqlalchemy = "^2.0.41"
psycopg2-binary = "^2.9.10"
pydantic = {extras = ["email"], version = "^2.11.7"}
boto3 = "^1.38.44"
opensearch-py = "^3.0.0"
pydantic-settings = "^2.10.1"
pyjwt = "^2.10.1"
alembic = "^1.16.2"
bcrypt = "^4.3.0"

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
isort = "^6.0.1"
flake8 = "^7.3.0"
alembic = "^1.16.2"
pytest = "^8.4.1"
httpx = "^0.28.1"
pytest-cov = "^6.2.1"
coverage = "^7.9.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
  | __pycache__
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = ".venv,__pycache__,build,dist"

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
    "*/migrations/*",
    "*/alembic/*",
    "*/build/*",
    "*/dist/*",
    "*/setup.py",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
